# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

source "$HOME/.dotfiles/zsh/zgen/zgen.zsh"
if ! zgen saved; then

  # specify plugins here
  zgen load mafredri/zsh-async
  zgen load camdencheek/fast-zsh-nvm

  # generate the init script from plugins above
  zgen save
fi

if [ "$TMUX" = "" ]; then exec tmux new -As main; fi

# fast-zsh-nvm
export AUTO_LOAD_NVMRC_FILES=true
export LOAD_NVMRC_ON_INIT=true

ulimit -n 2048

# General env
export GOBIN="$HOME/go/bin"
export PATH="/opt/homebrew/opt/sqlite/bin:/opt/homebrew/opt/llvm/bin:/opt/homebrew/opt/go@1.19/bin:/usr/local/pgsql/bin:/Users/camdencheek/src/sgdb/deploy/yugabyte-2.13.1.0/bin:/usr/local/bin:$PATH:/opt/homebrew/opt/go@1.18/bin:$HOME/go/bin:/usr/local/opt/bison/bin:/opt/chefdk/bin:$HOME/.rbenv/shims:$HOME/scripts:/usr/local/bin:$HOME/.cargo/bin:$HOME/src/bindplane/bindplane-scripts/bin:$HOME/.cargo/bin:/usr/local/bin:/usr/local/bin/go:$HOME/.gem/ruby/2.6.0/bin:/usr/local/bin:$HOME/.sg:/Applications/Xcode.app/Contents/Developer/usr/bin"
export LANG=en_US.UTF-8
export TERM=screen-256color
export EDITOR=nvim
export USE_EDITOR=$EDITOR
export VISUAL=$EDITOR
export MANPAGER='nvim +Man!'
export COLORTERM=truecolor
export GPG_TTY=$(tty)
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Lang env
export GOPATH="$HOME/go"

# Sourcegraph Setup
export PGPORT=5432
export PGHOST=localhost
export PGUSER=sourcegraph
export PGPASSWORD=sourcegraph
export PGDATABASE=sourcegraph
export PGDATA=/opt/homebrew/var/postgres
export PGSSLMODE=disable
export CTAGS_COMMAND=ctags
export YSQL_PORT=7010
export YCQL_PORT=7011
export MASTER_WEBSERVER_PORT=7012
export TSERVER_WEBSERVER_PORT=7013

export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
export PUPPETEER_EXECUTABLE_PATH=`which chromium`

# https://sourcegraph.slack.com/archives/CHEKCRWKV/p1610476943373500?thread_ts=1610406413.366700&cid=CHEKCRWKV
export PKG_CONFIG_PATH="/usr/local/opt/sqlite/lib/pkgconfig"

# Personal env
export FZF_CTRL_T_COMMAND='command cat <(fre --sorted) <(fd -t d)'
export FZF_CTRL_T_OPTS='--tiebreak=index --bind tab:down --bind shift-tab:up'

fpath=("$HOME/.config/zsh/functions" $fpath)

# Shell Aliases
alias ls='exa'
alias pubkey="cat ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'"
alias cat='bat'
alias mv='mv -i'
alias lintit='./dev/golangci-lint.sh --config .golangci.yml run'

# Copy path to file
function cpth() {
    realpath $1 | xargs echo -n | pbcopy
}

# Config editing aliases
alias ez='nvim ~/.zshrc && source ~/.zshrc'
alias ev='nvim ~/.config/nvim/init.lua'
alias et='nvim ~/.tmux.conf'

# Git Aliases
alias ga='git add -A'
alias gap='git add --patch'
# alias gc='git commit -m'
alias gl='git pull --prune'
alias gp='git push --follow-tags'
alias gpu='git push --set-upstream origin HEAD:cc/$(git rev-parse --abbrev-ref HEAD)'
alias gpd='git push --set-upstream origin HEAD:backend-integration/cc/$(git rev-parse --abbrev-ref HEAD)'
alias gpm='git push --set-upstream origin HEAD:main-dry-run/cc/$(git rev-parse --abbrev-ref HEAD)'
alias gco='git checkout'
alias gcl='git clean -df'
alias gs='git status -sb'
alias gac='git add -A && git commit -m'
alias gsum='git log --graph --decorate --pretty=oneline --abbrev-commit'

source ~/.dotfiles/zsh/powerlevel10k/powerlevel10k.zsh-theme

# History
HISTFILE=$HOME/.zsh_history
HISTSIZE=100000
SAVEHIST=100000
setopt append_history
setopt extended_history
setopt hist_verify
setopt share_history
setopt hist_ignore_dups
setopt inc_append_history

# Directory Options
setopt auto_pushd
setopt pushd_ignore_dups
setopt pushd_silent
setopt extended_glob

# Define Word Endings
WORDCHARS='*?+[]~=&;!#$%^(){}<>'

# Emacs keybindings
# for more info, man zshzle
bindkey -e

zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
_zpcompinit_custom() {
  setopt extendedglob local_options
  autoload -Uz compinit
  local zcd=${ZDOTDIR:-$HOME}/.zcompdump
  local zcdc="$zcd.zwc"
  # Compile the completion dump to increase startup speed, if dump is newer or doesn't exist,
  # in the background as this is doesn't affect the current session
  if [[ -f "$zcd"(#qN.m+1) ]]; then
        compinit -i -d "$zcd"
        { rm -f "$zcdc" && zcompile "$zcd" } &!
  else
        compinit -C -d "$zcd"
        { [[ ! -f "$zcdc" || "$zcd" -nt "$zcdc" ]] && rm -f "$zcdc" && zcompile "$zcd" } &!
  fi
}
_zpcompinit_custom

source ~/.dotfiles/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
setopt INTERACTIVE_COMMENTS
ZSH_HIGHLIGHT_STYLES[comment]='fg=gray'

# FZF options
source "$HOME/.dotfiles/zsh/fzf-key-bindings.zsh"

# Update fre on directory change
fre_chpwd() {
  fre --add "$(pwd)"
}
typeset -gaU chpwd_functions
chpwd_functions+=fre_chpwd

# Rust environment
source $HOME/.cargo/env

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Direnv
eval "$(direnv hook zsh)"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/ccheek/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/ccheek/Downloads/google-cloud-sdk/path.zsh.inc'; fi

# opam configuration
[[ ! -r /Users/camdencheek/.opam/opam-init/init.zsh ]] || source /Users/camdencheek/.opam/opam-init/init.zsh  > /dev/null 2> /dev/null

export PATH=/Users/camdencheek/.tiup/bin:$PATH
export MG_DEPLOY_SOURCEGRAPH_MANAGED_PATH=/Users/camdencheek/src/sourcegraph/deploy-sourcegraph-managed
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

. /opt/homebrew/opt/asdf/libexec/asdf.sh
