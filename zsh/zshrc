# Zplug

if [[ ! -d ~/.zplug ]]; then
	git clone https://github.com/zplug/zplug ~/.dotfiles/zsh/zplug
	source ~/.dotfiles/zsh/zplug/init.zsh && zplug update --self
fi

source ~/.dotfiles/zsh/zplug/init.zsh

zplug "felixr/docker-zsh-completion"

# Shell Aliases

alias em='emacs -nw'
alias sup='sudo $(fc -ln -1)'
alias sudo='sudo '
alias nv='nvim'
alias pubkey="more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'"

# Determine ls type

if ls --color -d . > /dev/null 2>&1; then
	alias ls=' ls --color=auto'
elif ls -G -d . > /dev/null 2>&1; then
	alias ls=' ls -G'
fi

# Cmake aliases

alias cm="cmake . && make"
function cmgen {
	source=$1
	dir="$(pwd)"
	echo "cmake_minimum_required ( VERSION 3.5.0 )\n"
		"project ( $( basename $pwd ) )\n"
		"add_executable ( prog $source )\n"
		"target_compile_features ( prog PRIVATE cxx_range_for )\n"
		"set ( CMAKE_CXX_COMPILER \"/usr/bin/clang++\" )\n"
		"set ( CMAKE_CXX_FLAGS \"-Wall\" )" > CMakeLists.txt
}

# Git Aliases

alias gl='git pull --prune'
alias gp='git push origin HEAD'
alias gd='git diff'
alias gco='git checkout'
alias gcb='git copy-branch-name'
alias gcl='git clean -dix'
alias gb='git branch'
alias gs='git status -sb'
alias gac='git add -A && git commit -m'

# Universal extract

extract () {
    if [ -f $1 ]; then
        case $1 in
            *.tar.bz2)  tar -jxvf $1                        ;;
            *.tar.gz)   tar -zxvf $1                        ;;
            *.bz2)      bunzip2 $1                          ;;
            *.dmg)      hdiutil mount $1                    ;;
            *.gz)       gunzip $1                           ;;
            *.tar)      tar -xvf $1                         ;;
            *.tbz2)     tar -jxvf $1                        ;;
            *.tgz)      tar -zxvf $1                        ;;
            *.zip)      unzip $1                            ;;
            *.ZIP)      unzip $1                            ;;
            *.pax)      cat $1 | pax -r                     ;;
            *.pax.Z)    uncompress $1 --stdout | pax -r     ;;
            *.rar)      unrar x $1                          ;;
            *.Z)        uncompress $1                       ;;
            *)          echo "'$1' cannot be extracted/mounted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Completion

zstyle ':completion:*' menu select
autoload -U compinit && compinit

# History

HISTFILE=$HOME/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt append_history
setopt extended_history
setopt hist_ignore_space
setopt hist_verify
setopt share_history

# Directory Options

setopt auto_pushd
setopt pushd_ignore_dups
setopt pushd_silent
setopt extended_glob

# Define Word Endings

WORDCHARS='*?+[]~=&;!#$%^(){}<>'

# Terminal Colors

if (( $+commands[grc] )) && (( $+commands[brew] )); then
	source `brew --prefix`/etc/grc.bashrc
fi
autoload -U colors
colors

TC='\e['
Rst="${TC}0m"     # Reset all coloring and style
Black="${TC}30m";
Red="${TC}31m";
Green="${TC}32m";
Yellow="${TC}33m";
Blue="${TC}34m";
Purple="${TC}35m";
Cyan="${TC}36m";
White="${TC}37m";

# Theme

source "$HOME/.dotfiles/zsh/zsh-theme.zsh"

# Set Shell

if [ -z ${SHELL+x} ]; then
	export SHELL=$(which zsh)
fi

# Docker Env
if (( $+commands[grc] )); then
	eval "$(docker-machine env default)"
fi	

# Standard Configs

export LANG=en.US.UTF-8
export TERM=xterm-256color
export EDITOR=nvim
